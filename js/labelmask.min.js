/*! Labelmask - v0.1.0 - 2014-04-23
 * Inserts input-masking-style functionality into labels without disrupting the input itself.
 * Based on Politespace by Filament Group https://github.com/filamentgroup/politespace
 * Hacked apart by Brad Frost. Propert development welcome
 * MIT License */
(function(t){"use strict";var e=function(t){var a,n;if(!t)throw Error("Labelmask requires an element argument.");t.getAttribute&&(a=t.getAttribute("data-format").replace(/-/g,"_").toUpperCase(),a in e.Types&&(this.inputSpacer=e.Types[a].spacer,this.inputFormat=e.Types[a].format,this.element=t,this.elID=this.element.id,this.groupLength=this.element.getAttribute("data-grouplength")||3,n=this._buildRegexArr(this.groupLength),this.elLabel=$("[for="+this.elID+"]"),this.groupRegNonUniform=n.length>1,this.groupReg=RegExp(n.join(""),this.groupRegNonUniform?"":"g")))};e.prototype._buildRegexArr=function(t){var e,a,n,r;for(e=(""+t).split(","),a=[],n=0,r=e.length;r>n;n++)a.push("([\\S]{"+(""===e[n]?"1,":e[n])+"})"+(n>0?"?":""));return a},e.prototype.format=function(t){var e,a=t;if(this.groupRegNonUniform){if(e=a.match(this.groupReg)){e.shift();for(var n=0;e.length>n;n++)e[n]||(e.splice(n,1),n--)}a=(e||[a]).join(this.inputSpacer)}else a=a.replace(this.groupReg,"$1 ")," "===a.substr(a.length-1)&&(a=a.substr(0,a.length-1));return a},e.prototype.update=function(){var t=this.element.getAttribute("maxlength"),e=this.format(this.element.value);t&&(e=e.substr(0,t)),this.element.value=e},e.prototype.unformat=function(t){return t.replace(RegExp(this.inputSpacer,"g"),"")},e.prototype.reset=function(){this.element.value=this.unformat(this.element.value)},e.prototype.addLabelMask=function(){0===this.elLabel.find(".labelmask").length&&this.elLabel.append('<span class="labelmask"></span>')},e.prototype.updateLabelMask=function(){var t=this.mask(),e=this.format(t);this.elLabel.find(".labelmask").html(" "+e)},e.prototype.removeLabelMask=function(){this.elLabel.find(".labelmask").remove()},e.prototype.mask=function(){var t=this.element.value.length,e=this.inputFormat.substr(t),a=this.element.value+e;return console.log(a),a},e.Types={CREDIT_CARD_NUMBER:{spacer:" ",format:"xxxxxxxxxxxxxxxx"},US_TELEPHONE_NUMBER:{spacer:"-",format:"__________"}},e.addInputType=function(t,a){t&&a.spacer&&a.format&&(e.Types[t]=a)},t.Labelmask=e})(this),function(t){"use strict";var e="labelmask",a="data-enhanced",n="[data-"+e+"]:not(["+a+"])";t.fn[e]=function(){return this.each(function(){var a=new Labelmask(this);t(this).bind("blur",function(){a.update(),a.removeLabelMask()}).bind("focus",function(){a.reset(),a.addLabelMask(),a.updateLabelMask(t(this).val())}).bind("keyup",function(){a.reset(),a.updateLabelMask(t(this).val())}).data(e,a),a.update()})},t(document).bind("enhance",function(r){var s=t(r.target).is(n)?t(r.target):t(n,r.target);s[e]().attr(a,"true")})}(jQuery);